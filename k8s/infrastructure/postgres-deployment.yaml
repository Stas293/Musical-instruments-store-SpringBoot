apiVersion: v1
kind: Namespace
metadata:
  name: default

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-data
  namespace: default
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---

apiVersion: v1
kind: Secret
metadata:
  name: postgres-secret
  namespace: default
type: Opaque
data:
  POSTGRES_PASSWORD: c2VjcmV0  # base64 encoded value of 'secret'
  POSTGRES_USER: bXl1c2Vy  # base64 encoded value of 'myuser'

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:latest
          env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_USER
          ports:
            - containerPort: 5432
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgres-data
            - mountPath: /docker-entrypoint-initdb.d/init-databases.sql
              subPath: init-databases.sql
              name: init-script
      volumes:
        - name: postgres-data
          persistentVolumeClaim:
            claimName: postgres-data
        - name: init-script
          configMap:
            name: init-script

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: init-script
  namespace: default
data:
  init-databases.sql: |
    CREATE DATABASE auth_service;
    CREATE DATABASE inventory_service;
    CREATE DATABASE order_service;

---

apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: default
spec:
  ports:
    - port: 5432
  selector:
    app: postgres